#include <stdio.h>
void merge(int low, int mid, int high, int a[], int b[]) 
{
    int h = low;
    int i = low;
    int j = mid + 1;

    while ((h <= mid) && (j <= high)) {
        if (a[h] <= a[j]) {
            b[i] = a[h];
            h++;
        } else {
            b[i] = a[j];
            j++;
        }
        i++;
    }

    while (h <= mid) {
        b[i] = a[h];
        h++;
        i++;
    }

    while (j <= high) {
        b[i] = a[j];
        j++;
        i++;
    }

    for (int k = low; k <= high; k++) {
        a[k] = b[k];
    }
}

void mergeSort(int low, int high, int a[], int b[]) {
    if (low < high) {
        int mid = (low + high) / 2;
        mergeSort(low, mid, a, b);
        mergeSort(mid + 1, high, a, b);
        merge(low, mid, high, a, b);
    }
}

int main() {
    int n = 8; // Number of elements in the array

    int a[8] = {12, 11, 13, 5, 6, 7, 8, 10};
    int b[8]; // Auxiliary array for merging

    printf("Original array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }

    mergeSort(0, n - 1, a, b);

    printf("\nSorted array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
    printf("\n");

    return 0;
}
